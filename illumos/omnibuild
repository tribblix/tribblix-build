#!/bin/sh
#
# perform an omnitribblix release build
#
# use releasebuild for vanilla tribblix!
#

THOME=${THOME:-/packages/localsrc/Tribblix}
export THOME

ILLSH=no.such.file
ARCH=`uname -p`

#
# we expect one argument, which is the name of the release
#
case $# in
1)
	ILLSH=illumos.sh.$1
	;;
*)
	echo "Usage: $0 release_name"
	exit 1
	;;
esac

#
# allow override
#
if [ -f ../${ILLSH} ]; then
    ILLSH="../${ILLSH}"
else
    ILLSH="${THOME}/tribblix-build/illumos/${ILLSH}"
fi

#
# if this doesn't look like an omnitribblix release, say so
#
case $1 in
*lx*)
    echo "Build using $ILLSH"
    ;;
*)
    echo "That version doesn't look like omnitribblix, use releasebuild instead"
    exit 1
    ;;
esac

#
# OmniTribblix only makes sense on x86
#
if [ "X$ARCH" != "Xi386" ]; then
    echo "OmniTribblix is intel only"
    exit 1
fi

if [ ! -f usr/src/tools/scripts/nightly ]; then
    echo "Cannot find nightly, are you in a gate?"
    exit 1
fi

if [ ! -f ../on-closed-bins.${ARCH}.tar.bz2 ]; then
    echo "Cannot find closed-bins"
    exit 1
fi

if [ ! -f ../on-closed-bins-nd.${ARCH}.tar.bz2 ]; then
    echo "Cannot find closed-bins-nd"
    exit 1
fi

if [ ! -f ${ILLSH} ]; then
    echo "Cannot find ${ILLSH}"
    exit 1
fi

#
# variant check
#
if [ ! -f README.OmniOS ]; then
    echo "This doesn't look like OmniOS, use releasebuild instead"
    exit 1
fi
if [ ! -f ${THOME}/tribblix-build/illumos/Makefile.auditrecord ]; then
    echo "Cannot find auditrecord Makefile"
    exit 1
fi

#
# environment sanity check
#
if [ ! -f ${THOME}/tribblix-build/illumos/check-environment.sh ]; then
    echo "ERROR: cannot check enviromnent"
    echo "Looking for ${THOME}/tribblix-build/illumos/check-environment.sh"
    exit 1
fi
if [ ! -x ${THOME}/tribblix-build/illumos/check-environment.sh ]; then
    echo "ERROR: cannot check enviromnent"
    echo "${THOME}/tribblix-build/illumos/check-environment.sh is not executable"
    exit 1
fi
${THOME}/tribblix-build/illumos/check-environment.sh
if [ $? -ne 0 ]; then
    echo "Environment check failed, aborting"
    exit 1
fi

#
# we need a sibling vanilla gate to copy files from
# conventionally, this would be the same as us but without
# the lx in the name
#
VANILLAGATE=`echo $1 | sed s:lx::`
VANILLAGATE="${VANILLAGATE}-gate"
if [ ! -f ../${VANILLAGATE}/usr/src/tools/scripts/nightly ]; then
    echo "Unable to find a sibling illumos gate (expecting ${VANILLAGATE})"
    exit 1
fi

#
# everything appears to be in place
#
echo "Unpacking closed-bins"
bzcat ../on-closed-bins.${ARCH}.tar.bz2 | tar xf -
echo "Unpacking closed-bins-nd"
bzcat ../on-closed-bins-nd.${ARCH}.tar.bz2 | tar xf -
echo "Copying files"
cp ${ILLSH} illumos.sh

#
# changes to the gate
#
rm -f usr/src/cmd/auditrecord/Makefile
cp ${THOME}/tribblix-build/illumos/Makefile.auditrecord usr/src/cmd/auditrecord/Makefile
if [ ! -f usr/src/cmd/auditrecord/Makefile ]; then
    echo "Oops, copying auditrecord Makefile failed"
    exit 2
fi
for file in ${THOME}/tribblix-build/illumos/*.patch
do
    gpatch -p1 < $file
done

#
# Specific fixes for an illumos-omnios build
#
# use default branding for motd
# the libbe patch will have failed, just copy a vanilla gate file
# need to fix up libfmd_snmp because our snmp is different
# need to reset perl to match our install
#
cp ../${VANILLAGATE}/usr/src/cmd/Adm/sun/Makefile usr/src/cmd/Adm/sun/Makefile
cp ../${VANILLAGATE}/usr/src/lib/libbe/common/libbe_priv.h usr/src/lib/libbe/common/libbe_priv.h
cp ../${VANILLAGATE}/usr/src/lib/fm/libfmd_snmp/Makefile.com usr/src/lib/fm/libfmd_snmp/Makefile.com
HEREDIR=`pwd`
cd ../${VANILLAGATE}
rm ../mperl.tar
tar cf ../mperl.tar `find usr/src/cmd/perl | grep Makefile`
cd $HEREDIR
tar xf ../mperl.tar
cp ../${VANILLAGATE}/usr/src/pkg/manifests/runtime-perl-module-sun-solaris.p5m usr/src/pkg/manifests/runtime-perl-module-sun-solaris.p5m
# omnios hardcodes the perl bitness in the Makefiles
sed -i '/BUILDPERL32/d' usr/src/Makefile.master
# fails ld guidance with gcc4
sed -i 's:-lc ::' usr/src/lib/libidspace/Makefile.com
#
# illumos-omnios uses dma by default, but we use sendmail
# https://github.com/tribblix/build/issues/8
#
cp ../${VANILLAGATE}/usr/src/cmd/mailwrapper/mailer.conf usr/src/cmd/mailwrapper/mailer.conf

#
# and kaboom
#
echo "Starting build"
/bin/date
time usr/src/tools/scripts/nightly illumos.sh
/bin/date

ls -l log/latest/mail_msg
