#!/bin/sh
#
# perform a tribblix release build
#
# use omnibuild for omnitribblix!
#

THOME=${THOME:-/packages/localsrc/Tribblix}
export THOME

ILLSH=no.such.file
ARCH=`uname -p`

#
# we expect one argument, which is the name of the release
#
case $# in
1)
	ILLSH=illumos.sh.$1
	;;
*)
	echo "Usage: $0 release_name"
	exit 1
	;;
esac

#
# allow override
#
if [ -f ../${ILLSH} ]; then
    ILLSH="../${ILLSH}"
else
    ILLSH="${THOME}/tribblix-build/illumos/${ILLSH}"
fi

#
# if this looks like an omnitribblix release, say so
#
case $1 in
*lx*)
    echo "That version looks like omnitribblix, use omnibuild instead"
    exit 1
    ;;
*)
    echo "Build using $ILLSH"
    ;;
esac

if [ ! -f usr/src/tools/scripts/nightly ]; then
    echo "Cannot find nightly, are you in a gate?"
    exit 1
fi

if [ ! -f ../on-closed-bins.${ARCH}.tar.bz2 ]; then
    echo "Cannot find closed-bins"
    exit 1
fi

if [ ! -f ../on-closed-bins-nd.${ARCH}.tar.bz2 ]; then
    echo "Cannot find closed-bins-nd"
    exit 1
fi

if [ ! -f ${ILLSH} ]; then
    echo "Cannot find ${ILLSH}"
    exit 1
fi

#
# variant check
#
if [ -f README.OmniOS ]; then
    echo "This looks like OmniOS, use omnibuild instead"
    exit 1
fi

if [ ! -f ${THOME}/tribblix-build/illumos/Makefile.auditrecord ]; then
    echo "Cannot find auditrecord Makefile"
    exit 1
fi

#
# environment sanity check
#
if [ ! -f ${THOME}/tribblix-build/illumos/check-environment.sh ]; then
    echo "ERROR: cannot check enviromnent"
    echo "Looking for ${THOME}/tribblix-build/illumos/check-environment.sh"
    exit 1
fi
if [ ! -x ${THOME}/tribblix-build/illumos/check-environment.sh ]; then
    echo "ERROR: cannot check enviromnent"
    echo "${THOME}/tribblix-build/illumos/check-environment.sh is not executable"
    exit 1
fi
${THOME}/tribblix-build/illumos/check-environment.sh
if [ $? -ne 0 ]; then
    echo "Environment check failed, aborting"
    exit 1
fi

#
# everything appears to be in place
#
echo "Unpacking closed-bins"
bzcat ../on-closed-bins.${ARCH}.tar.bz2 | tar xf -
echo "Unpacking closed-bins-nd"
bzcat ../on-closed-bins-nd.${ARCH}.tar.bz2 | tar xf -
echo "Copying files"
cp ${ILLSH} illumos.sh

#
# changes to the gate
#
rm -f usr/src/cmd/auditrecord/Makefile
cp ${THOME}/tribblix-build/illumos/Makefile.auditrecord usr/src/cmd/auditrecord/Makefile
if [ ! -f usr/src/cmd/auditrecord/Makefile ]; then
    echo "Oops, copying auditrecord Makefile failed"
    exit 2
fi
for file in ${THOME}/tribblix-build/illumos/*.patch
do
    gpatch -p1 < $file
done

#
# Specific fixes for an illumos-gate build
# don't compile or ship pyzfs.pyc, the Makefile is for python2
#
cp ${THOME}/tribblix-build/illumos/Makefile.pyzfs usr/src/cmd/pyzfs/Makefile
sed -i 's:file path=usr/lib/zfs/pyzfs.pyc:#file path=usr/lib/zfs/pyzfs.pyc:' usr/src/pkg/manifests/system-file-system-zfs.p5m

#
# and kaboom
#
echo "Starting build"
/bin/date
time usr/src/tools/scripts/nightly illumos.sh
/bin/date

ls -l log/latest/mail_msg
