#!/bin/sh
#
# SPDX-License-Identifier: CDDL-1.0
#
# {{{ CDDL HEADER
#
# This file and its contents are supplied under the terms of the
# Common Development and Distribution License ("CDDL"), version 1.0.
# You may only use this file in accordance with the terms of version
# 1.0 of the CDDL.
#
# A full copy of the text of the CDDL should have accompanied this
# source. A copy of the CDDL is also available via the Internet at
# http://www.illumos.org/license/CDDL.
#
# }}}
#
# Copyright 2025 Peter Tribble
#

#
# copy packages into the pkgs folder on the iso, including all the packages
# necessary for the shipped overlays
#

RELEASE=36lx

DISTROOT=/export/tribblix/dist
ZAPDIR=${DISTROOT}/pkgs
THOME=${THOME:-/packages/localsrc/Tribblix}
VARIANT=""
OVDIR="overlays.lx"
DRYRUN=""
ECHO="echo"

#
# flags
# -D desttop -> DESTTOP
# -N -> no install, dry run
# -Q -> quiet, less output
# -R release string -> RELEASE
#
while getopts "D:NQR:" opt; do
    case $opt in
        D)
	    DESTTOP="$OPTARG"
	    DISTROOT=${DESTTOP}/dist
	    ZAPDIR=${DISTROOT}/pkgs
	    ;;
        N)
	    DRYRUN=y
	    ;;
        Q)
	    ECHO="true"
	    ;;
        R)
	    RELEASE="$OPTARG"
	    ;;
    esac
done
shift $((OPTIND-1))

#
# Tribblix and illumos packages are explicitly versioned
#
ILVER="0.${RELEASE}"
TPKGDIR=${THOME}/pkgs
IPKGDIR=${THOME}/illumos-pkgs-m${RELEASE}/pkgs

#
# check we have packages, and metadata
#
if [ ! -d ${IPKGDIR} ]; then
    echo "ERROR: no illumos packages for release $RELEASE"
    exit 1
fi
if [ ! -d ${TPKGDIR} ]; then
    echo "ERROR: no tribblix packages found"
    exit 1
fi
if [ ! -d ${THOME}/${OVDIR} ]; then
    echo "ERROR: no overlays found"
    exit 1
fi
if [ ! -d ${THOME}/build ]; then
    echo "ERROR: missing build directory"
    exit 1
fi
if [ ! -f ${IPKGDIR}/catalog ]; then
    echo "ERROR: no illumos package catalog for release $RELEASE"
    exit 1
fi
if [ ! -f ${TPKGDIR}/catalog ]; then
    echo "ERROR: no tribblix package catalog found"
    exit 1
fi
if [ ! -f ${THOME}/${OVDIR}/catalog ]; then
    echo "ERROR: no overlay catalog found"
    exit 1
fi
if [ ! -f ${IPKGDIR}/aliases ]; then
    echo "ERROR: no illumos package aliases for release $RELEASE"
    exit 1
fi
if [ ! -f ${TPKGDIR}/aliases ]; then
    echo "ERROR: no tribblix package aliases found"
    exit 1
fi
if [ ! -f ${IPKGDIR}/filelist.bz2 ]; then
    echo "ERROR: no illumos package filelist for release $RELEASE"
    exit 1
fi
if [ ! -f ${TPKGDIR}/filelist.bz2 ]; then
    echo "ERROR: no tribblix package filelist found"
    exit 1
fi

#
# the one argument is a variant, which sets the destination directory
#
# if there's a variant overlays.iso, then use that
#
OVLIST=${THOME}/${OVDIR}/overlays.iso
case $# in
1)
	DISTROOT=${DISTROOT}.$1
	ZAPDIR=${DISTROOT}/pkgs
	VARIANT=$1
	if [ -f ${THOME}/${OVDIR}/overlays.${VARIANT}.iso ]; then
	    OVLIST=${THOME}/${OVDIR}/overlays.${VARIANT}.iso
	fi
	;;
esac
if [ ! -f ${OVLIST} ]; then
    echo "ERROR: no overlay list found"
    exit 1
fi

TFILE="/tmp/mkzap.$$"
rm -fr ${TFILE}
touch $TFILE
for opkg in $(<${OVLIST})
do
    if [ -f ${THOME}/${OVDIR}/${opkg}.pkgs ]; then
	cat ${THOME}/${OVDIR}/${opkg}.pkgs >> $TFILE
    else
	echo "ERROR: missing overlay $opkg"
	rm -f $TFILE
	exit 1
    fi
done

#
# we look in ${TPKGDIR}, then ${IPKGDIR}
#
#
# verify first
#
VALID=yes
ERRLIST=""
for ipkg in `sort -u ${TFILE}|egrep -v '^(TRIBzap|TRIBzap-upgrade|TRIBrelease-name)$'`
do
  THISVER="XXX"
  ILVER="XXX"
  PKGI=${THOME}/build/${ipkg}/pkginfo
  if [ -f ${PKGI} ]; then
      THISVER=`awk -F= '{if ($1 == "VERSION") print $2}' $PKGI | sed 's="==g'`
  fi
  ILVER=`awk -v V=${ipkg} -F'|' '{if ($1==V) print $2}' ${IPKGDIR}/catalog`
  if [ -f ${TPKGDIR}/${ipkg}.${THISVER}.zap ]; then
      $ECHO "Installing $ipkg ${THISVER} from Tribblix"
  elif [ -f ${IPKGDIR}/${ipkg}.${ILVER}.zap ]; then
      $ECHO "Installing $ipkg from Illumos"
  else
      echo "ERROR: package $ipkg not found"
      VALID=no
      ERRLIST="$ERRLIST $ipkg"
  fi
done
if [ "X$VALID" = "Xno" ]; then
    echo "ERROR: missing packages, mk-pkgs-zap aborted"
    echo "Missing: $ERRLIST"
    rm -f $TFILE
    exit 1
fi

if [ -n "${DRYRUN}" ]; then
    rm -f $TFILE
    exit 0
fi

#
# delete the pkgs directory to avoid lingering leftovers
#
rm -fr $ZAPDIR
mkdir -p $ZAPDIR
if [ ! -d $ZAPDIR ]; then
    echo "ERROR: unable to create $ZAPDIR"
    rm -f $TFILE
    exit 1
fi
rm -f ${ZAPDIR}/catalog
touch ${ZAPDIR}/catalog
chmod 644 ${ZAPDIR}/catalog

#
# use pre-existing zap files
#
for ipkg in `sort -u ${TFILE}|egrep -v '^(TRIBzap|TRIBzap-upgrade|TRIBrelease-name)$'`
do
  if [ -f ${DISTROOT}/var/sadm/pkg/${ipkg}/pkginfo ]; then
      echo "Skipping installed ${ipkg}"
  else
      THISVER="XXX"
      ILVER="XXX"
      PKGI=${THOME}/build/${ipkg}/pkginfo
      if [ -f ${PKGI} ]; then
	  THISVER=`awk -F= '{if ($1 == "VERSION") print $2}' $PKGI | sed 's="==g'`
      fi
      ILVER=`awk -v V=${ipkg} -F'|' '{if ($1==V) print $2}' ${IPKGDIR}/catalog`
      if [ -f ${TPKGDIR}/${ipkg}.${THISVER}.zap ]; then
	  cp ${TPKGDIR}/${ipkg}.${THISVER}.zap $ZAPDIR
      elif [ -f ${IPKGDIR}/${ipkg}.${ILVER}.zap ]; then
	  cp ${IPKGDIR}/${ipkg}.${ILVER}.zap ${ZAPDIR}/${ipkg}.${ILVER}.zap
	  THISVER=${ILVER}
      fi
      echo "${ipkg}|${THISVER}|"`unzip -p ${ZAPDIR}/${ipkg}.${THISVER}.zap ${ipkg}/install/depend 2>/dev/null | /usr/bin/awk '{if ($1 == "P") print $2}'` >> ${ZAPDIR}/catalog
  fi
done

rm -f $TFILE

#
# preload repository metadata
# existence was checked for earlier
#
cp ${TPKGDIR}/catalog ${DISTROOT}/etc/zap/repositories/tribblix.catalog
cp ${IPKGDIR}/catalog ${DISTROOT}/etc/zap/repositories/illumos.catalog
cp ${TPKGDIR}/aliases ${DISTROOT}/etc/zap/repositories/tribblix.aliases
cp ${IPKGDIR}/aliases ${DISTROOT}/etc/zap/repositories/illumos.aliases
cp ${TPKGDIR}/filelist.bz2 ${DISTROOT}/etc/zap/repositories/tribblix.filelist.bz2
cp ${IPKGDIR}/filelist.bz2 ${DISTROOT}/etc/zap/repositories/illumos.filelist.bz2
cp ${THOME}/${OVDIR}/catalog ${DISTROOT}/etc/zap/repositories/tribblix.overlays

#
# show the space used
#
sync
/usr/bin/du -hds $ZAPDIR
